package com.tuxdave.AnimeDownloader.graphics;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.tuxdave.AnimeDownloader.logic.Anime;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class VisualAnimeForm extends JPanel {
    private JPanel containerPanel;
    private JLabel titleLabel;
    private JLabel nEpisodiLabel;
    private JLabel durataEpLabe;
    private JLabel image;

    private Anime anime;

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        containerPanel = new JPanel();
        containerPanel.setLayout(new GridLayoutManager(3, 2, new Insets(2, 2, 2, 2), -1, -1));
        Font containerPanelFont = this.$$$getFont$$$("Ubuntu", Font.BOLD, 14, containerPanel.getFont());
        if (containerPanelFont != null) containerPanel.setFont(containerPanelFont);
        titleLabel = new JLabel();
        Font titleLabelFont = this.$$$getFont$$$("Ubuntu", Font.BOLD, 14, titleLabel.getFont());
        if (titleLabelFont != null) titleLabel.setFont(titleLabelFont);
        titleLabel.setText("Titolo:");
        containerPanel.add(titleLabel, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        nEpisodiLabel = new JLabel();
        Font nEpisodiLabelFont = this.$$$getFont$$$("Ubuntu", Font.BOLD, 14, nEpisodiLabel.getFont());
        if (nEpisodiLabelFont != null) nEpisodiLabel.setFont(nEpisodiLabelFont);
        nEpisodiLabel.setText("Episodi: ");
        containerPanel.add(nEpisodiLabel, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        durataEpLabe = new JLabel();
        Font durataEpLabeFont = this.$$$getFont$$$("Ubuntu", Font.BOLD, 14, durataEpLabe.getFont());
        if (durataEpLabeFont != null) durataEpLabe.setFont(durataEpLabeFont);
        durataEpLabe.setText("Durata: ");
        containerPanel.add(durataEpLabe, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        image.setText("");
        containerPanel.add(image, new GridConstraints(0, 0, 3, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /** @noinspection ALL */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /** @noinspection ALL */
    public JComponent $$$getRootComponent$$$() {
        return containerPanel;
    }

    public VisualAnimeForm(Anime a) {
        $$$setupUI$$$();
        setAnime(a);
    }

    public VisualAnimeForm() {
        this(new Anime());
    }

    public void setAnime(Anime a) {
        anime = a;

        ImageIcon temp = new ImageIcon(anime.getImagePath());
        temp.setImage(temp.getImage().getScaledInstance(50, 70, Image.SCALE_DEFAULT));
        image.setIcon(temp);

        titleLabel.setText("Titolo: " + a.getName());
        nEpisodiLabel.setText("Episodi: " + (a.getEpisodeNumber() != 0 ? a.getEpisodeNumber() : ""));
        durataEpLabe.setText(("Durata: " + (a.getEpisodeLength())));
    }

    private void createUIComponents() {
        ImageIcon img = new ImageIcon(getClass().getClassLoader().getResource("icons/segnapostoImage.png"));
        img.setImage(img.getImage().getScaledInstance(50, 70, Image.SCALE_DEFAULT));
        image = new JLabel(img);
    }
}
